// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreMovie_ApiRest.Data;

#nullable disable

namespace StoreMovie_ApiRest.Migrations
{
    [DbContext(typeof(StoreMovieDbContext))]
    [Migration("20240308082240_MyFirstMigration")]
    partial class MyFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StoreMovie_ApiRest.Models.MovieGender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovieGenders");
                });

            modelBuilder.Entity("StoreMovie_ApiRest.Models.MoviesStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("MovieGenderId")
                        .HasColumnType("int");

                    b.Property<string>("NameMovie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieGenderId");

                    b.ToTable("moviesStores");
                });

            modelBuilder.Entity("StoreMovie_ApiRest.Models.UserStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CellPhone")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesStoreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MoviesStoreId");

                    b.ToTable("UserStores");
                });

            modelBuilder.Entity("StoreMovie_ApiRest.Models.MoviesStore", b =>
                {
                    b.HasOne("StoreMovie_ApiRest.Models.MovieGender", "MovieGender")
                        .WithMany()
                        .HasForeignKey("MovieGenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieGender");
                });

            modelBuilder.Entity("StoreMovie_ApiRest.Models.UserStore", b =>
                {
                    b.HasOne("StoreMovie_ApiRest.Models.MoviesStore", "MoviesStore")
                        .WithMany()
                        .HasForeignKey("MoviesStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MoviesStore");
                });
#pragma warning restore 612, 618
        }
    }
}
